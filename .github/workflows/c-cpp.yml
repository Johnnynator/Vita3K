name: C/C++ CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        config: [Release]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
      
      - name: Set up build environment (macos-latest)
        run: |
          brew install ccache boost ninja
          echo "::add-path::/usr/local/opt/ccache/libexec"
          echo "::set-env name=CCACHE_DIR::/tmp/ccache"
        if: matrix.os == 'macos-latest'

      - name: Set up build environment (ubuntu-latest)
        run: |
          sudo apt-get update
          sudo apt-get -y install ccache ninja-build libboost-filesystem-dev libboost-program-options-dev libboost-system-dev libgtk-3-dev libsdl2-dev
          echo "::set-env name=CCACHE_DIR::/tmp/ccache"
        if: matrix.os == 'ubuntu-latest'

      - name: Set up build environment (windows-latest)
        run: |
          curl -LO https://github.com/mozilla/sccache/releases/download/0.2.12/sccache-0.2.12-x86_64-pc-windows-msvc.tar.gz
          tar -zxvf sccache-0.2.12-x86_64-pc-windows-msvc.tar.gz
          echo ::add-path::$(pwd)\sccache-0.2.12-x86_64-pc-windows-msvc\
          curl -LO https://github.com/ninja-build/ninja/releases/download/v1.10.0/ninja-win.zip
          7z x -oninja-win ninja-win.zip
          echo ::add-path::$(pwd)\ninja-win\
          echo "::set-env name=BOOST_ROOT::$env:BOOST_ROOT_1_72_0"
        if: matrix.os == 'windows-latest'

      - uses: actions/cache@v1
        with:
          path: /tmp/ccache
          key: ccache-${{ matrix.os }}-${{ matrix.config }}-${{ github.sha }}
          restore-keys: ccache-${{ matrix.os }}-${{ matrix.config }}-
        if: matrix.os != 'windows-latest'

      - uses: actions/cache@v1
        with:
          path: D:\sccache
          key: sccache-${{ matrix.os }}-${{ matrix.config }}-${{ github.sha }}
          restore-keys: sccache-${{ matrix.os }}-${{ matrix.config }}-
        if: matrix.os == 'windows-latest'

      - name: Start sccache
        env:
          SCCACHE_CACHE_SIZE: "5G"
          SCCACHE_IDLE_TIMEOUT: 0
          SCCACHE_DIR: D:\sccache
        run: sccache --start-server
        if: matrix.os == 'windows-latest'

      - name: CMake configure
        run: |
          "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        if: matrix.os == 'windows-latest'
      - run: cmake -B build -G Ninja -DCI=ON -DCMAKE_BUILD_TYPE=${{ matrix.config }}

      - name: CMake build
        run: cmake --build build --config ${{ matrix.config }} --parallel 2

      - name: CTest
        working-directory: build
        run: ctest --build-config ${{ matrix.config }} --output-on-failure --parallel 2

      - name: Compute git short sha
        id: git_short_sha
        run: echo "::set-output name=value::$(git rev-parse --short HEAD)"

      - uses: actions/upload-artifact@v2
        with:
          name: vita3k-${{ steps.git_short_sha.outputs.value }}-${{ matrix.os }}
          path: build/bin
      - name: Zip Artifacts
        uses: papeloto/action-zip@5f1c4aa
        with:
          files: build/bin
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@14569a2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/result.zip
          asset_name: ${{ matrix.os }}.zip
          tag: continous
          overwrite: true
        if: github.ref == 'refs/heads/master'

      - name: Stop sccache
        run: sccache --stop-server
        if: matrix.os == 'windows-latest'
